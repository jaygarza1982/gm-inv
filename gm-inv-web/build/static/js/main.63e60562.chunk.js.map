{"version":3,"sources":["components/ItemInput/index.js","components/TableIcons/index.js","components/ItemList/index.js","components/Navbar/index.js","components/Layout/index.jsx","components/QRPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","itemTitle","margin","wordBreak","saveButton","marginTop","width","maxWidth","color","withRouter","withSnackbar","props","classes","useParams","apiKey","itemName","React","useState","value","setValue","className","FormControl","component","FormLabel","RadioGroup","row","aria-label","name","onChange","e","target","FormControlLabel","control","Radio","label","Button","style","backgroundColor","variant","startIcon","Save","onClick","fetch","then","resp","status","enqueueSnackbar","JSON","stringify","statusText","catch","err","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","items","setItems","useEffect","json","icons","TableIcons","title","columns","field","render","rowData","date","blob","url","window","URL","createObjectURL","a","document","createElement","href","download","click","data","position","bottom","left","transform","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","Link","to","icon","Layout","children","input","qrAPIKey","setQRAPIKey","qrItemName","setQRItemName","location","origin","size","TextField","type","autoComplete","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","maxSnack","getElementById"],"mappings":"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","file":"static/js/main.63e60562.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Button from '@material-ui/core/Button';\nimport { Save } from '@material-ui/icons';\nimport { withSnackbar } from 'notistack';\nimport { useParams, withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    root: {\n        // position: 'absolute',\n        // left: '50%',\n        // top: '35%',\n        // transform: 'translate(-50%, -50%)',\n        // WebkitTransform: 'translate(-50%, -50%)',\n        // width: '100%'\n    },\n    itemTitle: {\n        margin: '40px 0px 40px 0px',\n        wordBreak: 'break-word'\n    },\n    saveButton: {\n        marginTop: '50px',\n        width: '65%',\n        maxWidth: '350px',\n        color: '#fff'\n    }\n});\n\nconst ItemInput = props => {\n    const classes = useStyles();\n\n    const { apiKey, itemName } = useParams();\n\n    const [value, setValue] = React.useState('Used');\n\n    const handleSetMark = e => {\n        setValue(e.target.value);\n    }\n\n    const saveStatus = () => {\n        fetch(`/api/items/add-status/${apiKey}/${itemName}/${value}/`).then(resp => {\n            if (resp.status === 200) {\n                props.enqueueSnackbar(`Successfully saved ${itemName} as ${value}`, { variant: 'success' });\n            }\n            else {\n                props.enqueueSnackbar(`Could not save. Reason: ${JSON.stringify(resp.statusText)}`, { variant: 'error' });\n            }\n        }).catch(err => {\n            props.enqueueSnackbar(`Could not send request. Reason: ${JSON.stringify(err)}`, { variant: 'error' });\n        });\n    }\n\n    return (\n        <div className={classes.root}>\n            {/* {`${apiKey} ${itemName}`} */}\n            <h2 className={classes.itemTitle}>{itemName}</h2>\n            <FormControl component='fieldset'>\n                <FormLabel component='legend'>Mark {itemName} as...</FormLabel>\n                <RadioGroup row aria-label='status' name='status' value={value} onChange={handleSetMark}>\n                    <FormControlLabel value='Used' control={<Radio />} label='Used' />\n                    <FormControlLabel value='Down' control={<Radio />} label='Down' />\n                </RadioGroup>\n            </FormControl>\n\n            <br />\n\n            <Button\n                //Themes are overkill for this app ;)\n                style={{\n                    backgroundColor: value === 'Used' ? '#1976d2' : '#d32f2f'\n                }}\n                className={classes.saveButton}\n                variant='contained'\n                startIcon={ <Save /> }\n                onClick={saveStatus}\n            >\n                Mark {value}\n            </Button>\n        </div>\n    );\n};\n  \nexport default withRouter(withSnackbar(ItemInput));\n","import React from 'react';\nimport { AddBox, ArrowDownward, Check, ChevronLeft, ChevronRight, Clear, DeleteOutline, Edit, FilterList, FirstPage, LastPage, Remove, SaveAlt, Search, ViewColumn } from \"@material-ui/icons\";\nimport { forwardRef } from \"react\";\n\nexport default {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\n};","import { withSnackbar } from 'notistack';\nimport React, { useEffect } from 'react';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../TableIcons';\nimport { useParams, withRouter } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nconst ItemList = props => {\n    const { apiKey } = useParams();\n\n    const [items, setItems] = React.useState([]);\n\n    useEffect(() => {\n        fetch(`/api/items/list/${apiKey}`).then(resp => {\n            if (resp.status === 200) {\n                resp.json().then(json => {\n                    setItems(json);\n                });\n            }\n            else {\n                props.enqueueSnackbar(`Could not list items. Reason \"${JSON.stringify(resp.statusText)}\"`, { variant: 'error' });\n            }\n        }, err => {\n            props.enqueueSnackbar(`Could not list items. Reason \"${JSON.stringify(err)}\"`, { variant: 'error' });\n        });\n    }, [])\n\n    const downloadItems = date => {\n        fetch(`/api/items/download/${apiKey}/${date}`).then(resp => {\n            resp.blob().then(blob => {\n                //Download file\n                let url = window.URL.createObjectURL(blob);\n                let a = document.createElement('a');\n                a.href = url;\n                a.download = `${date}.csv`;\n                a.click();\n            });\n        });\n    }\n\n    return (\n        <>\n            <h2>Item List</h2>\n            <MaterialTable\n                icons={TableIcons}\n                title={'Items In Months'}\n                columns={\n                    [\n                        { title: 'Date', field: 'date', render: rowData => {\n                            return (\n                                <Button\n                                    onClick={() => { downloadItems(rowData.date) }}\n                                    variant='contained'\n                                    color='primary'\n                                >\n                                    {rowData.date}\n                                </Button>\n                            )\n                        }}\n                    ]\n                }\n                data={items}\n            />\n        </>\n    );\n}\n\nexport default withRouter(withSnackbar(ItemList));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport CropFree from '@material-ui/icons/CropFree';\nimport FormatListNumbered from '@material-ui/icons/FormatListNumbered';\nimport { Link, withRouter, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '500px',\n        position: 'absolute',\n        bottom: '0',\n        left: '50%',\n        transform: 'translateX(-50%)',\n    },\n});\n\nconst Navbar = props => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const { apiKey } = useParams();\n\n    return (\n        <BottomNavigation\n            value={value}\n            onChange={(event, newValue) => {\n                setValue(newValue);\n            }}\n            showLabels\n            className={classes.root}\n        >\n            <BottomNavigationAction\n                component={Link}\n                to={`/qr-page/${apiKey}`}\n                label='Make QR'\n                icon={ <CropFree /> }\n            />\n            <BottomNavigationAction\n                component={Link}\n                to={`/item-list/${apiKey}`}\n                label='List Items'\n                icon={ <FormatListNumbered /> }\n            />\n        </BottomNavigation>\n    );\n}\n\nexport default withRouter(Navbar);","import React from \"react\";\nimport Navbar from '../Navbar';\n\nexport const Layout = (props) => {\n    return (\n        //For navbar\n        <div>\n            <div>{props.children}</div>\n            <Navbar />\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from 'react';\nimport QRCode from 'qrcode.react';\nimport { makeStyles, TextField } from '@material-ui/core';\nimport { useParams, withRouter } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    root: {},\n    input: {\n        margin: '25px',\n    }\n});\n\nconst QRPage = () => {\n    const classes = useStyles();\n\n    const { apiKey } = useParams();\n\n    const [qrAPIKey, setQRAPIKey] = React.useState(apiKey || '');\n    const [qrItemName, setQRItemName] = React.useState('');\n\n    const qrAPIKeyChange = e => {\n        setQRAPIKey(e.target.value);\n    }\n\n    const qrItemNameChange = e => {\n        setQRItemName(e.target.value);\n    }\n\n    return (\n        <>\n            <h2>QR Page</h2>\n            <QRCode\n                value={`${window.location.origin}/#/item-modify/${qrAPIKey}/${qrItemName}`}\n                size={256}\n            />\n            <br />\n            <TextField\n                className={classes.input}\n                margin='dense'\n                label='API Key'\n                type='text'\n                value={qrAPIKey}\n                onChange={qrAPIKeyChange}\n                autoComplete='false'\n                variant='outlined'\n            />\n            <br />\n            <TextField\n                className={classes.input}\n                margin='dense'\n                label='Item Name'\n                type='text'\n                value={qrItemName}\n                onChange={qrItemNameChange}\n                autoComplete='false'\n                variant='outlined'\n            />\n        </>\n    );\n}\n\nexport default withRouter(QRPage);\n","import './App.css';\nimport ItemInput from './components/ItemInput';\nimport {Switch, Route } from 'react-router-dom';\nimport ItemList from './components/ItemList';\nimport Layout from './components/Layout';\nimport QRPage from './components/QRPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path='/item-modify/:apiKey/:itemName'>\n          <Layout>\n            <ItemInput />\n          </Layout>\n        </Route>\n        <Route path='/item-list/:apiKey'>\n          <Layout>\n            <ItemList />\n          </Layout>\n        </Route>\n        <Route path='/qr-page/:apiKey?'>\n          <Layout>\n            <QRPage />\n          </Layout>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <SnackbarProvider maxSnack={3} >\n        <App />\n      </SnackbarProvider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}